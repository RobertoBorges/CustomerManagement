services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    user: root
    environment:
      - SA_PASSWORD=P@ssw0rd
      - ACCEPT_EULA=Y
    ports:
      - "1434:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
      - ./init:/init
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P P@ssw0rd -Q 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - customer-management-network
      
  api:
    build:
      context: .
      dockerfile: CustomerManagement.Api/Dockerfile
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=CustomerManagementDB;User Id=sa;Password=P@ssw0rd;TrustServerCertificate=True;MultipleActiveResultSets=true
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      - customer-management-network

  ui:
    build:
      context: .
      dockerfile: CustomerManagement.UI/Dockerfile
    ports:
      - "5001:80"
    depends_on:
      - api
    networks:
      - customer-management-network

volumes:
  sqlserver-data:
  
networks:
  customer-management-network:
    driver: bridge
